pipeline {
    agent any

    environment {
        PROJECT_ID = 'pet-sos-474805'
        REGION = 'asia-southeast1'
        IMAGE_NAME = 'petsos-web-app'
        IMAGE_TAG = "${env.BUILD_NUMBER}"         // Unique tag for each build
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t gcr.io/${PROJECT_ID}/${IMAGE_NAME}:${IMAGE_TAG} ."
            }
        }

        stage('Authenticate with GCP') {
            steps {
                withCredentials([file(credentialsId: 'gcp-service-account-json', variable: 'GCP_KEY')]) {
                    sh 'gcloud auth activate-service-account --key-file=$GCP_KEY'
                    sh "gcloud config set project ${PROJECT_ID}"
                    sh "gcloud auth configure-docker"
                }
            }
        }

        stage('Push to GCR') {
            steps {
                sh "docker push gcr.io/${PROJECT_ID}/${IMAGE_NAME}:${IMAGE_TAG}"
            }
        }

        stage('Deploy to Cloud Run') {
            steps {
                // Load environment variables from .env in project folder
                sh 'export $(grep -v "^#" .env | xargs)'

                sh """
                    gcloud run deploy ${IMAGE_NAME} \
                        --image gcr.io/${PROJECT_ID}/${IMAGE_NAME}:${IMAGE_TAG} \
                        --platform managed \
                        --region ${REGION} \
                        --allow-unauthenticated \
                        --set-env-vars DATABASE_URL=$DATABASE_URL,NEXTAUTH_SECRET=$NEXTAUTH_SECRET,NEXTAUTH_URL=$NEXTAUTH_URL,GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID,GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET
                """
            }
        }
    }

    post {
        success { echo "Deployment completed successfully!" }
        failure { echo "Deployment failed!" }
    }
}
